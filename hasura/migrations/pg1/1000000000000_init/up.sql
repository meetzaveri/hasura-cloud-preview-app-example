CREATE EXTENSION IF NOT EXISTS pgcrypto;

CREATE TABLE public.user (
    id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    display_name TEXT NOT NULL,
    username TEXT NOT NULL UNIQUE,
    password TEXT NOT NULL,
    is_superuser BOOLEAN NOT NULL DEFAULT FALSE
);

COMMENT ON TABLE public.user                                    IS 'User';
COMMENT ON COLUMN public.user.id                                IS 'Primary key';
COMMENT ON COLUMN public.user.display_name                      IS 'Display name, typically the real name of the user';
COMMENT ON COLUMN public.user.username                          IS 'Username user for authentication, must be unique';
COMMENT ON COLUMN public.user.password                          IS 'BCrypt hash of password';
COMMENT ON COLUMN public.user.is_superuser                      IS 'Is this user a superuser';

CREATE TABLE public.product (
    id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    name TEXT NOT NULL,
    description TEXT NOT NULL,
    in_catalog BOOLEAN NOT NULL DEFAULT TRUE
);

COMMENT ON TABLE public.product                                 IS 'Product';
COMMENT ON COLUMN public.product.id                             IS 'Primary key';
COMMENT ON COLUMN public.product.name                           IS 'Product name';
COMMENT ON COLUMN public.product.description                    IS 'Product Description';


CREATE TABLE public.cart_item (
    id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    user_id INTEGER NOT NULL REFERENCES public.user (id) ON DELETE CASCADE,
    product_id INTEGER NOT NULL REFERENCES public.product (id) ON DELETE CASCADE,
    quantity INTEGER NOT NULL CHECK (quantity > 0),
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    UNIQUE(user_id, product_id)
);

COMMENT ON TABLE public.cart_item                               IS 'A product in the users'' cart. ';
COMMENT ON COLUMN public.cart_item.id                           IS 'Primary key';
COMMENT ON COLUMN public.cart_item.user_id                      IS 'User Id. On delete cascade';
COMMENT ON COLUMN public.cart_item.product_id                   IS 'Product Id';
COMMENT ON COLUMN public.cart_item.quantity                     IS 'Quantity in cart';
COMMENT ON COLUMN public.cart_item.created_at                       IS 'Created at timestamp';

CREATE TABLE public.order (
    id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    user_id INTEGER NOT NULL REFERENCES public.user (id) ON DELETE RESTRICT,
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW() 
);

COMMENT ON TABLE public.order                                   IS 'An order placed by the user';
COMMENT ON COLUMN public.order.id                               IS 'Primary key';
COMMENT ON COLUMN public.order.user_id                          IS 'User id';
COMMENT ON COLUMN public.order.created_at                       IS 'Created at timestamp';

CREATE TABLE public.order_item (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    order_id INTEGER NOT NULL REFERENCES public.order (id) ON DELETE CASCADE,
    product_id INTEGER NOT NULL REFERENCES public.product (id) ON DELETE RESTRICT,
    quantity INTEGER NOT NULL CHECK (quantity > 0)
);

COMMENT ON TABLE public.order_item                              IS 'An item in an order';
COMMENT ON COLUMN public.order_item.id                          IS 'Primary Key';
COMMENT ON COLUMN public.order_item.order_id                    IS 'Order id';
COMMENT ON COLUMN public.order_item.product_id                  IS 'Product id';
COMMENT ON COLUMN public.order_item.quantity                    IS 'Quantity';

CREATE FUNCTION public.catalog()
RETURNS SETOF public.product AS $$
    SELECT * FROM public.product
    WHERE in_catalog = true
$$ LANGUAGE SQL STABLE;

COMMENT ON FUNCTION public.catalog                             IS 'Subset of products that are currently in the public catalog';